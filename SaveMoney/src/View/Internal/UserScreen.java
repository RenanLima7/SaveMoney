/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Internal;

import Controller.AccountController;
import Controller.CardController;
import Controller.CategoryController;
import Controller.DisplayManager;
import Controller.ExpenseController;
import Controller.RevenueController;
import Model.Entity.*;
import Model.Enums.*;
import Model.Home.Card;
import Model.Home.Expense;
import Model.Home.Revenue;
import View.HomeScreen;
import View.LoginScreen;
import static View.LoginScreen.avatar;
import static View.LoginScreen.email1;
import static View.RegisterScreen.imgPath;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.sql.Blob;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Renan
 */
public class UserScreen extends javax.swing.JInternalFrame {

    ExpenseController exp = new ExpenseController();
    AccountController ac = new AccountController();
    CardController c = new CardController();
    CategoryController cat = new CategoryController();
    CardController cc = new CardController();
    RevenueController rc = new RevenueController();
    DisplayManager d = new DisplayManager();

    public UserScreen() throws Exception {
        initComponents();
        blobToImage(avatar, labelAvatar1);
        setInfo();
        btnSelect.setVisible(false);
        txtName.setEditable(false);
        txtEmail.setEditable(false);
        btnSave.setVisible(false);
    }

    public static void blobToImage(Blob blobBD, JLabel label) throws Exception {
        //Converte blob em Image
        byte[] image = blobBD.getBytes(1, (int) blobBD.length());
        Image img = Toolkit.getDefaultToolkit().createImage(image);

        //Escala imagen dentro do JLabel (no meu caso o JLabel possui: 272 por 192)
        Image newimg = img.getScaledInstance(111, 111, java.awt.Image.SCALE_SMOOTH);
        ImageIcon imageIcon = new ImageIcon(newimg);

        //Apresenta a imagem no componente JLabel
        label.setIcon(imageIcon);
    }

    public final void setInfo() throws SQLException {
        String email = HomeScreen.txtEmail.getText();
        Account accountId = ac.getAccountByEmail(email);

        txtName.setText(ac.getAccountByEmail(email).getFullName());
        txtEmail.setText(ac.getAccountByEmail(email).getEmail());
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        Date data = ac.getAccountByEmail(email).getCeationDate();
        String dataFormatada = sdf.format(data);
        txtDate.setText(dataFormatada);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFundo = new javax.swing.JPanel();
        btnEdit = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        txtDespesas1 = new javax.swing.JLabel();
        txtDespesas2 = new javax.swing.JLabel();
        txtDespesas4 = new javax.swing.JLabel();
        btnExcluir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        labelAvatar1 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnSelect = new javax.swing.JButton();

        setBorder(null);

        pnlFundo.setBackground(new java.awt.Color(30, 30, 60));

        btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEdit.setText("EDITAR");
        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditMouseClicked(evt);
            }
        });

        txtName.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N

        txtDate.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        txtDate.setEnabled(false);

        txtDespesas1.setBackground(new java.awt.Color(255, 255, 255));
        txtDespesas1.setFont(new java.awt.Font("Ruda", 0, 24)); // NOI18N
        txtDespesas1.setForeground(new java.awt.Color(255, 255, 255));
        txtDespesas1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtDespesas1.setText("Email:");

        txtDespesas2.setBackground(new java.awt.Color(255, 255, 255));
        txtDespesas2.setFont(new java.awt.Font("Ruda", 0, 24)); // NOI18N
        txtDespesas2.setForeground(new java.awt.Color(255, 255, 255));
        txtDespesas2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtDespesas2.setText("Nome:");

        txtDespesas4.setBackground(new java.awt.Color(255, 255, 255));
        txtDespesas4.setFont(new java.awt.Font("Ruda", 0, 24)); // NOI18N
        txtDespesas4.setForeground(new java.awt.Color(255, 255, 255));
        txtDespesas4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtDespesas4.setText("Data de Criação:");

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExcluir.setText("EXCLUIR CONTA");
        btnExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExcluirMouseClicked(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_Close_32px.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        labelAvatar1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAvatar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/user.png"))); // NOI18N
        labelAvatar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        labelAvatar1.setMinimumSize(new java.awt.Dimension(30, 20));

        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSave.setText("SALVAR");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });

        btnSelect.setBackground(new java.awt.Color(85, 65, 118));
        btnSelect.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSelect.setForeground(new java.awt.Color(213, 220, 224));
        btnSelect.setText("Selecionar");
        btnSelect.setBorder(null);
        btnSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSelectMouseClicked(evt);
            }
        });
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFundoLayout = new javax.swing.GroupLayout(pnlFundo);
        pnlFundo.setLayout(pnlFundoLayout);
        pnlFundoLayout.setHorizontalGroup(
            pnlFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFundoLayout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addGroup(pnlFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFundoLayout.createSequentialGroup()
                        .addGroup(pnlFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDespesas1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDespesas2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlFundoLayout.createSequentialGroup()
                                .addComponent(labelAvatar1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSelect, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlFundoLayout.createSequentialGroup()
                        .addComponent(txtDespesas4, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(60, 60, 60))
            .addGroup(pnlFundoLayout.createSequentialGroup()
                .addGap(281, 281, 281)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlFundoLayout.setVerticalGroup(
            pnlFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFundoLayout.createSequentialGroup()
                .addGroup(pnlFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFundoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(14, 14, 14)
                        .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFundoLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(labelAvatar1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(pnlFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDespesas2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDespesas1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnlFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDate)
                    .addComponent(txtDespesas4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(98, 98, 98)
                .addGroup(pnlFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(237, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseClicked
        txtName.setEditable(true);
        txtEmail.setEditable(true);
        btnExcluir.setVisible(false);
        btnSave.setVisible(true);
        btnSelect.setVisible(true);
    }//GEN-LAST:event_btnEditMouseClicked

    private void btnExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExcluirMouseClicked
        try {
            Account account = ac.getAccountByEmail(email1);

            int count = 0;
            int countDesp = 0;
            int delete = JOptionPane.showConfirmDialog(this, "Você irá apagar a conta, quer continuar?", "Excluir", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (delete == JOptionPane.YES_OPTION) {
                Card card = cc.getCardByAccountId(account.getId());
                Revenue revenue = rc.getRevenueByAccountId(account.getId());
                List<Expense> expense = exp.getExpenseListByAccountId(account.getId());

                if (card != null) {
                    if (card.getAccountId() == account.getId()) {
                        JOptionPane.showMessageDialog(null, "Você não pode excluir a conta!"
                                + "\n Existe um cartão cadastrado!");
                        count++;
                    }
                }

                if (count == 0) {
                    if (revenue != null) {
                        if (revenue.getAccountId() == account.getId()) {
                            JOptionPane.showMessageDialog(null, "Você não pode excluir a conta!"
                                    + "\n Existe uma receita cadastrada!");
                            count++;
                        }
                    }
                }

                if (count == 0) {
                    if (expense != null) {
                        if (expense.size() > 0) {
                            for (Expense e : expense) {
                                countDesp++;
                            }
                        }
                    }
                }

                if (countDesp > 0) {
                    JOptionPane.showMessageDialog(null, "Você não pode excluir a conta!"
                            + "\nEla está cadastrada em " + countDesp + " Despesa(s)!");
                } else if (count > 0) {
                    
                } else {
                    boolean sucesso = ac.deleteAccount(account.getId());
                    if (sucesso) {
                        JOptionPane.showMessageDialog(null, "Conta excluida com sucesso!");
                        this.dispose();
                        d.openFrame(new LoginScreen());
                    } else {
                        JOptionPane.showMessageDialog(null, "Não foi possível excluir a conta!");
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(CardsScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnExcluirMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveMouseClicked

    private void btnSelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSelectMouseClicked
        selectFile1();
    }//GEN-LAST:event_btnSelectMouseClicked

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed

    }//GEN-LAST:event_btnSelectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSelect;
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel labelAvatar1;
    private javax.swing.JPanel pnlFundo;
    private javax.swing.JTextField txtDate;
    private javax.swing.JLabel txtDespesas1;
    private javax.swing.JLabel txtDespesas2;
    private javax.swing.JLabel txtDespesas4;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    public static void selectFile1() {
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setDialogTitle("Selecionar avatar");
        fc.addChoosableFileFilter(new FileNameExtensionFilter("Imagens (*png, jpg, jpeg)", "png", "jpg", "jpeg")); //SELECIONA O FILTRO DE ARQUIVOS
        fc.setAcceptAllFileFilterUsed(false);  //Limita os filtros de arquivos
        int res = fc.showOpenDialog(null);

        if (res == JFileChooser.APPROVE_OPTION) {
            File arquivo = fc.getSelectedFile();

            //Limpa a imagem atual do JLabel
            labelAvatar1.setIcon(null);
            imgPath = arquivo.getAbsolutePath();

            //Seta a imagem selecionada
            Image img = new ImageIcon(arquivo.getAbsolutePath()).getImage();

            //Redimensiona a imagen
            Image newimg = img.getScaledInstance(280, 192, java.awt.Image.SCALE_SMOOTH);
            ImageIcon imageIcon = new ImageIcon(newimg);

            //Seta a imagem ao componente JLabel
            labelAvatar1.setIcon(ResizeImage(imgPath, null));
        } else {
            imgPath = null;
        }
    }

    public static ImageIcon ResizeImage(String ImagePath, byte[] pic) {
        ImageIcon Img = null;

        if (ImagePath != null) {
            Img = new ImageIcon(ImagePath);
        } else {
            Img = new ImageIcon("/Images/user.png");
        }
        Image img = Img.getImage();
        Image newImg = img.getScaledInstance(labelAvatar1.getWidth(), labelAvatar1.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
}
